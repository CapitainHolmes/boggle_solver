{"filter":false,"title":"test_boggle.py","tooltip":"/test_boggle.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":92,"column":28},"end":{"row":93,"column":0},"action":"insert","lines":["",""],"id":983},{"start":{"row":93,"column":0},"end":{"row":93,"column":8},"action":"insert","lines":["        "]},{"start":{"row":93,"column":8},"end":{"row":93,"column":9},"action":"insert","lines":["t"]},{"start":{"row":93,"column":9},"end":{"row":93,"column":10},"action":"insert","lines":["h"]}],[{"start":{"row":93,"column":10},"end":{"row":93,"column":11},"action":"insert","lines":["e"],"id":984}],[{"start":{"row":93,"column":10},"end":{"row":93,"column":11},"action":"remove","lines":["e"],"id":985}],[{"start":{"row":93,"column":10},"end":{"row":93,"column":11},"action":"insert","lines":["r"],"id":986},{"start":{"row":93,"column":11},"end":{"row":93,"column":12},"action":"insert","lines":["e"]},{"start":{"row":93,"column":12},"end":{"row":93,"column":13},"action":"insert","lines":["e"]},{"start":{"row":93,"column":13},"end":{"row":93,"column":14},"action":"insert","lines":["L"]},{"start":{"row":93,"column":14},"end":{"row":93,"column":15},"action":"insert","lines":["e"]}],[{"start":{"row":93,"column":15},"end":{"row":93,"column":16},"action":"insert","lines":["t"],"id":987},{"start":{"row":93,"column":16},"end":{"row":93,"column":17},"action":"insert","lines":["t"]},{"start":{"row":93,"column":17},"end":{"row":93,"column":18},"action":"insert","lines":["e"]},{"start":{"row":93,"column":18},"end":{"row":93,"column":19},"action":"insert","lines":["r"]},{"start":{"row":93,"column":19},"end":{"row":93,"column":20},"action":"insert","lines":["W"]},{"start":{"row":93,"column":20},"end":{"row":93,"column":21},"action":"insert","lines":["o"]},{"start":{"row":93,"column":21},"end":{"row":93,"column":22},"action":"insert","lines":["r"]}],[{"start":{"row":93,"column":22},"end":{"row":93,"column":23},"action":"insert","lines":["d"],"id":988}],[{"start":{"row":93,"column":23},"end":{"row":93,"column":24},"action":"insert","lines":[" "],"id":989},{"start":{"row":93,"column":24},"end":{"row":93,"column":25},"action":"insert","lines":["="]}],[{"start":{"row":93,"column":25},"end":{"row":93,"column":26},"action":"insert","lines":[" "],"id":990}],[{"start":{"row":93,"column":26},"end":{"row":93,"column":28},"action":"insert","lines":["''"],"id":991}],[{"start":{"row":93,"column":27},"end":{"row":93,"column":28},"action":"insert","lines":["A"],"id":992},{"start":{"row":93,"column":28},"end":{"row":93,"column":29},"action":"insert","lines":["B"]},{"start":{"row":93,"column":29},"end":{"row":93,"column":30},"action":"insert","lines":["C"]}],[{"start":{"row":93,"column":31},"end":{"row":94,"column":0},"action":"insert","lines":["",""],"id":993},{"start":{"row":94,"column":0},"end":{"row":94,"column":8},"action":"insert","lines":["        "]},{"start":{"row":94,"column":8},"end":{"row":94,"column":9},"action":"insert","lines":["n"]},{"start":{"row":94,"column":9},"end":{"row":94,"column":10},"action":"insert","lines":["o"]},{"start":{"row":94,"column":10},"end":{"row":94,"column":11},"action":"insert","lines":["t"]},{"start":{"row":94,"column":11},"end":{"row":94,"column":12},"action":"insert","lines":["T"]}],[{"start":{"row":94,"column":12},"end":{"row":94,"column":13},"action":"insert","lines":["h"],"id":994},{"start":{"row":94,"column":13},"end":{"row":94,"column":14},"action":"insert","lines":["e"]},{"start":{"row":94,"column":14},"end":{"row":94,"column":15},"action":"insert","lines":["r"]},{"start":{"row":94,"column":15},"end":{"row":94,"column":16},"action":"insert","lines":["e"]},{"start":{"row":94,"column":16},"end":{"row":94,"column":17},"action":"insert","lines":["W"]},{"start":{"row":94,"column":17},"end":{"row":94,"column":18},"action":"insert","lines":["r"]}],[{"start":{"row":94,"column":17},"end":{"row":94,"column":18},"action":"remove","lines":["r"],"id":995}],[{"start":{"row":94,"column":17},"end":{"row":94,"column":18},"action":"insert","lines":["o"],"id":996},{"start":{"row":94,"column":18},"end":{"row":94,"column":19},"action":"insert","lines":["r"]},{"start":{"row":94,"column":19},"end":{"row":94,"column":20},"action":"insert","lines":["d"]}],[{"start":{"row":94,"column":20},"end":{"row":94,"column":21},"action":"insert","lines":[" "],"id":997},{"start":{"row":94,"column":21},"end":{"row":94,"column":22},"action":"insert","lines":["="]}],[{"start":{"row":94,"column":22},"end":{"row":94,"column":23},"action":"insert","lines":[" "],"id":998}],[{"start":{"row":94,"column":23},"end":{"row":94,"column":25},"action":"insert","lines":["''"],"id":999}],[{"start":{"row":94,"column":24},"end":{"row":94,"column":25},"action":"insert","lines":["E"],"id":1000},{"start":{"row":94,"column":25},"end":{"row":94,"column":26},"action":"insert","lines":["E"]},{"start":{"row":94,"column":26},"end":{"row":94,"column":27},"action":"insert","lines":["E"]}],[{"start":{"row":94,"column":28},"end":{"row":95,"column":0},"action":"insert","lines":["",""],"id":1001},{"start":{"row":95,"column":0},"end":{"row":95,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":95,"column":8},"end":{"row":95,"column":9},"action":"insert","lines":["d"],"id":1002},{"start":{"row":95,"column":9},"end":{"row":95,"column":10},"action":"insert","lines":["i"]},{"start":{"row":95,"column":10},"end":{"row":95,"column":11},"action":"insert","lines":["c"]},{"start":{"row":95,"column":11},"end":{"row":95,"column":12},"action":"insert","lines":["t"]},{"start":{"row":95,"column":12},"end":{"row":95,"column":13},"action":"insert","lines":["i"]},{"start":{"row":95,"column":13},"end":{"row":95,"column":14},"action":"insert","lines":["o"]},{"start":{"row":95,"column":14},"end":{"row":95,"column":15},"action":"insert","lines":["n"]}],[{"start":{"row":95,"column":8},"end":{"row":95,"column":15},"action":"remove","lines":["diction"],"id":1003},{"start":{"row":95,"column":8},"end":{"row":95,"column":18},"action":"insert","lines":["dictionary"]}],[{"start":{"row":95,"column":18},"end":{"row":95,"column":19},"action":"insert","lines":[" "],"id":1004},{"start":{"row":95,"column":19},"end":{"row":95,"column":20},"action":"insert","lines":["="]}],[{"start":{"row":95,"column":20},"end":{"row":95,"column":21},"action":"insert","lines":[" "],"id":1005}],[{"start":{"row":95,"column":21},"end":{"row":95,"column":23},"action":"insert","lines":["[]"],"id":1006}],[{"start":{"row":95,"column":22},"end":{"row":95,"column":23},"action":"insert","lines":["t"],"id":1007},{"start":{"row":95,"column":23},"end":{"row":95,"column":24},"action":"insert","lines":["e"]},{"start":{"row":95,"column":24},"end":{"row":95,"column":25},"action":"insert","lines":["o"]}],[{"start":{"row":95,"column":24},"end":{"row":95,"column":25},"action":"remove","lines":["o"],"id":1008},{"start":{"row":95,"column":23},"end":{"row":95,"column":24},"action":"remove","lines":["e"]}],[{"start":{"row":95,"column":23},"end":{"row":95,"column":24},"action":"insert","lines":["e"],"id":1009}],[{"start":{"row":95,"column":23},"end":{"row":95,"column":24},"action":"remove","lines":["e"],"id":1010}],[{"start":{"row":95,"column":23},"end":{"row":95,"column":24},"action":"insert","lines":["w"],"id":1011}],[{"start":{"row":95,"column":22},"end":{"row":95,"column":24},"action":"remove","lines":["tw"],"id":1012},{"start":{"row":95,"column":22},"end":{"row":95,"column":35},"action":"insert","lines":["twoLetterWord"]}],[{"start":{"row":95,"column":35},"end":{"row":95,"column":36},"action":"insert","lines":[","],"id":1013}],[{"start":{"row":95,"column":36},"end":{"row":95,"column":37},"action":"insert","lines":[" "],"id":1014},{"start":{"row":95,"column":37},"end":{"row":95,"column":38},"action":"insert","lines":["t"]},{"start":{"row":95,"column":38},"end":{"row":95,"column":39},"action":"insert","lines":["h"]}],[{"start":{"row":95,"column":37},"end":{"row":95,"column":39},"action":"remove","lines":["th"],"id":1015},{"start":{"row":95,"column":37},"end":{"row":95,"column":52},"action":"insert","lines":["threeLetterWord"]}],[{"start":{"row":95,"column":52},"end":{"row":95,"column":53},"action":"insert","lines":[","],"id":1016}],[{"start":{"row":95,"column":53},"end":{"row":95,"column":54},"action":"insert","lines":[" "],"id":1017},{"start":{"row":95,"column":54},"end":{"row":95,"column":55},"action":"insert","lines":["n"]},{"start":{"row":95,"column":55},"end":{"row":95,"column":56},"action":"insert","lines":["o"]},{"start":{"row":95,"column":56},"end":{"row":95,"column":57},"action":"insert","lines":["t"]}],[{"start":{"row":95,"column":54},"end":{"row":95,"column":57},"action":"remove","lines":["not"],"id":1018},{"start":{"row":95,"column":54},"end":{"row":95,"column":66},"action":"insert","lines":["notThereWord"]}],[{"start":{"row":95,"column":67},"end":{"row":96,"column":0},"action":"insert","lines":["",""],"id":1019},{"start":{"row":96,"column":0},"end":{"row":96,"column":8},"action":"insert","lines":["        "]},{"start":{"row":96,"column":8},"end":{"row":97,"column":0},"action":"insert","lines":["",""]},{"start":{"row":97,"column":0},"end":{"row":97,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":97,"column":8},"end":{"row":97,"column":9},"action":"insert","lines":["f"],"id":1020},{"start":{"row":97,"column":9},"end":{"row":97,"column":10},"action":"insert","lines":["o"]},{"start":{"row":97,"column":10},"end":{"row":97,"column":11},"action":"insert","lines":["u"]},{"start":{"row":97,"column":11},"end":{"row":97,"column":12},"action":"insert","lines":["n"]},{"start":{"row":97,"column":12},"end":{"row":97,"column":13},"action":"insert","lines":["d"]},{"start":{"row":97,"column":13},"end":{"row":97,"column":14},"action":"insert","lines":["W"]},{"start":{"row":97,"column":14},"end":{"row":97,"column":15},"action":"insert","lines":["o"]},{"start":{"row":97,"column":15},"end":{"row":97,"column":16},"action":"insert","lines":["r"]}],[{"start":{"row":97,"column":16},"end":{"row":97,"column":17},"action":"insert","lines":["d"],"id":1021},{"start":{"row":97,"column":17},"end":{"row":97,"column":18},"action":"insert","lines":["s"]}],[{"start":{"row":97,"column":18},"end":{"row":97,"column":19},"action":"insert","lines":[" "],"id":1022},{"start":{"row":97,"column":19},"end":{"row":97,"column":20},"action":"insert","lines":["="]}],[{"start":{"row":97,"column":20},"end":{"row":97,"column":21},"action":"insert","lines":[" "],"id":1023}],[{"start":{"row":97,"column":21},"end":{"row":97,"column":22},"action":"insert","lines":["b"],"id":1024},{"start":{"row":97,"column":22},"end":{"row":97,"column":23},"action":"insert","lines":["o"]},{"start":{"row":97,"column":23},"end":{"row":97,"column":24},"action":"insert","lines":["g"]},{"start":{"row":97,"column":24},"end":{"row":97,"column":25},"action":"insert","lines":["g"]},{"start":{"row":97,"column":25},"end":{"row":97,"column":26},"action":"insert","lines":["l"]},{"start":{"row":97,"column":26},"end":{"row":97,"column":27},"action":"insert","lines":["e"]},{"start":{"row":97,"column":27},"end":{"row":97,"column":28},"action":"insert","lines":[","]}],[{"start":{"row":97,"column":27},"end":{"row":97,"column":28},"action":"remove","lines":[","],"id":1025}],[{"start":{"row":97,"column":27},"end":{"row":97,"column":28},"action":"insert","lines":["."],"id":1026},{"start":{"row":97,"column":28},"end":{"row":97,"column":29},"action":"insert","lines":["s"]},{"start":{"row":97,"column":29},"end":{"row":97,"column":30},"action":"insert","lines":["e"]}],[{"start":{"row":97,"column":30},"end":{"row":97,"column":31},"action":"insert","lines":["a"],"id":1027},{"start":{"row":97,"column":31},"end":{"row":97,"column":32},"action":"insert","lines":["r"]},{"start":{"row":97,"column":32},"end":{"row":97,"column":33},"action":"insert","lines":["c"]},{"start":{"row":97,"column":33},"end":{"row":97,"column":34},"action":"insert","lines":["g"]}],[{"start":{"row":97,"column":33},"end":{"row":97,"column":34},"action":"remove","lines":["g"],"id":1028}],[{"start":{"row":97,"column":33},"end":{"row":97,"column":34},"action":"insert","lines":["h"],"id":1029}],[{"start":{"row":97,"column":34},"end":{"row":97,"column":36},"action":"insert","lines":["()"],"id":1030}],[{"start":{"row":97,"column":35},"end":{"row":97,"column":36},"action":"insert","lines":["g"],"id":1031},{"start":{"row":97,"column":36},"end":{"row":97,"column":37},"action":"insert","lines":["r"]},{"start":{"row":97,"column":37},"end":{"row":97,"column":38},"action":"insert","lines":["i"]},{"start":{"row":97,"column":38},"end":{"row":97,"column":39},"action":"insert","lines":["d"]},{"start":{"row":97,"column":39},"end":{"row":97,"column":40},"action":"insert","lines":[","]}],[{"start":{"row":97,"column":40},"end":{"row":97,"column":41},"action":"insert","lines":[" "],"id":1032},{"start":{"row":97,"column":41},"end":{"row":97,"column":42},"action":"insert","lines":["d"]},{"start":{"row":97,"column":42},"end":{"row":97,"column":43},"action":"insert","lines":["i"]},{"start":{"row":97,"column":43},"end":{"row":97,"column":44},"action":"insert","lines":["c"]},{"start":{"row":97,"column":44},"end":{"row":97,"column":45},"action":"insert","lines":["i"]}],[{"start":{"row":97,"column":44},"end":{"row":97,"column":45},"action":"remove","lines":["i"],"id":1033}],[{"start":{"row":97,"column":41},"end":{"row":97,"column":44},"action":"remove","lines":["dic"],"id":1034},{"start":{"row":97,"column":41},"end":{"row":97,"column":51},"action":"insert","lines":["dictionary"]}],[{"start":{"row":97,"column":52},"end":{"row":98,"column":0},"action":"insert","lines":["",""],"id":1035},{"start":{"row":98,"column":0},"end":{"row":98,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":98,"column":8},"end":{"row":99,"column":0},"action":"insert","lines":["",""],"id":1036},{"start":{"row":99,"column":0},"end":{"row":99,"column":8},"action":"insert","lines":["        "]},{"start":{"row":99,"column":8},"end":{"row":99,"column":9},"action":"insert","lines":["s"]},{"start":{"row":99,"column":9},"end":{"row":99,"column":10},"action":"insert","lines":["e"]},{"start":{"row":99,"column":10},"end":{"row":99,"column":11},"action":"insert","lines":["k"]},{"start":{"row":99,"column":11},"end":{"row":99,"column":12},"action":"insert","lines":["f"]}],[{"start":{"row":99,"column":11},"end":{"row":99,"column":12},"action":"remove","lines":["f"],"id":1037},{"start":{"row":99,"column":10},"end":{"row":99,"column":11},"action":"remove","lines":["k"]}],[{"start":{"row":99,"column":10},"end":{"row":99,"column":11},"action":"insert","lines":["l"],"id":1038},{"start":{"row":99,"column":11},"end":{"row":99,"column":12},"action":"insert","lines":["f"]},{"start":{"row":99,"column":12},"end":{"row":99,"column":13},"action":"insert","lines":["."]},{"start":{"row":99,"column":13},"end":{"row":99,"column":14},"action":"insert","lines":["a"]},{"start":{"row":99,"column":14},"end":{"row":99,"column":15},"action":"insert","lines":["s"]},{"start":{"row":99,"column":15},"end":{"row":99,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":99,"column":16},"end":{"row":99,"column":17},"action":"insert","lines":["e"],"id":1039},{"start":{"row":99,"column":17},"end":{"row":99,"column":18},"action":"insert","lines":["r"]},{"start":{"row":99,"column":18},"end":{"row":99,"column":19},"action":"insert","lines":["t"]},{"start":{"row":99,"column":19},"end":{"row":99,"column":20},"action":"insert","lines":["T"]}],[{"start":{"row":99,"column":13},"end":{"row":99,"column":20},"action":"remove","lines":["assertT"],"id":1040},{"start":{"row":99,"column":13},"end":{"row":99,"column":25},"action":"insert","lines":["assertTrue()"]}],[{"start":{"row":99,"column":24},"end":{"row":99,"column":25},"action":"insert","lines":["t"],"id":1041},{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"insert","lines":["e"]},{"start":{"row":99,"column":26},"end":{"row":99,"column":27},"action":"insert","lines":["i"]}],[{"start":{"row":99,"column":26},"end":{"row":99,"column":27},"action":"remove","lines":["i"],"id":1042},{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"remove","lines":["e"]}],[{"start":{"row":99,"column":25},"end":{"row":99,"column":26},"action":"insert","lines":["w"],"id":1043}],[{"start":{"row":99,"column":24},"end":{"row":99,"column":26},"action":"remove","lines":["tw"],"id":1044},{"start":{"row":99,"column":24},"end":{"row":99,"column":37},"action":"insert","lines":["twoLetterWord"]}],[{"start":{"row":99,"column":37},"end":{"row":99,"column":38},"action":"insert","lines":[" "],"id":1045},{"start":{"row":99,"column":38},"end":{"row":99,"column":39},"action":"insert","lines":["i"]},{"start":{"row":99,"column":39},"end":{"row":99,"column":40},"action":"insert","lines":["n"]}],[{"start":{"row":99,"column":40},"end":{"row":99,"column":41},"action":"insert","lines":[" "],"id":1046},{"start":{"row":99,"column":41},"end":{"row":99,"column":42},"action":"insert","lines":["f"]},{"start":{"row":99,"column":42},"end":{"row":99,"column":43},"action":"insert","lines":["o"]},{"start":{"row":99,"column":43},"end":{"row":99,"column":44},"action":"insert","lines":["u"]},{"start":{"row":99,"column":44},"end":{"row":99,"column":45},"action":"insert","lines":["n"]},{"start":{"row":99,"column":45},"end":{"row":99,"column":46},"action":"insert","lines":["d"]}],[{"start":{"row":99,"column":41},"end":{"row":99,"column":46},"action":"remove","lines":["found"],"id":1047},{"start":{"row":99,"column":41},"end":{"row":99,"column":51},"action":"insert","lines":["foundWords"]}],[{"start":{"row":99,"column":52},"end":{"row":100,"column":0},"action":"insert","lines":["",""],"id":1048},{"start":{"row":100,"column":0},"end":{"row":100,"column":8},"action":"insert","lines":["        "]},{"start":{"row":100,"column":8},"end":{"row":100,"column":9},"action":"insert","lines":["s"]},{"start":{"row":100,"column":9},"end":{"row":100,"column":10},"action":"insert","lines":["e"]},{"start":{"row":100,"column":10},"end":{"row":100,"column":11},"action":"insert","lines":["l"]},{"start":{"row":100,"column":11},"end":{"row":100,"column":12},"action":"insert","lines":["f"]}],[{"start":{"row":100,"column":12},"end":{"row":100,"column":13},"action":"insert","lines":["."],"id":1049},{"start":{"row":100,"column":13},"end":{"row":100,"column":14},"action":"insert","lines":["a"]},{"start":{"row":100,"column":14},"end":{"row":100,"column":15},"action":"insert","lines":["e"]},{"start":{"row":100,"column":15},"end":{"row":100,"column":16},"action":"insert","lines":["e"]}],[{"start":{"row":100,"column":15},"end":{"row":100,"column":16},"action":"remove","lines":["e"],"id":1050},{"start":{"row":100,"column":14},"end":{"row":100,"column":15},"action":"remove","lines":["e"]}],[{"start":{"row":100,"column":14},"end":{"row":100,"column":15},"action":"insert","lines":["s"],"id":1051},{"start":{"row":100,"column":15},"end":{"row":100,"column":16},"action":"insert","lines":["s"]},{"start":{"row":100,"column":16},"end":{"row":100,"column":17},"action":"insert","lines":["e"]},{"start":{"row":100,"column":17},"end":{"row":100,"column":18},"action":"insert","lines":["r"]},{"start":{"row":100,"column":18},"end":{"row":100,"column":19},"action":"insert","lines":["t"]},{"start":{"row":100,"column":19},"end":{"row":100,"column":20},"action":"insert","lines":["t"]}],[{"start":{"row":100,"column":20},"end":{"row":100,"column":21},"action":"insert","lines":["="],"id":1052}],[{"start":{"row":100,"column":20},"end":{"row":100,"column":21},"action":"remove","lines":["="],"id":1053},{"start":{"row":100,"column":19},"end":{"row":100,"column":20},"action":"remove","lines":["t"]}],[{"start":{"row":100,"column":19},"end":{"row":100,"column":20},"action":"insert","lines":["T"],"id":1054}],[{"start":{"row":100,"column":13},"end":{"row":100,"column":20},"action":"remove","lines":["assertT"],"id":1055},{"start":{"row":100,"column":13},"end":{"row":100,"column":25},"action":"insert","lines":["assertTrue()"]}],[{"start":{"row":100,"column":24},"end":{"row":100,"column":25},"action":"insert","lines":["t"],"id":1056},{"start":{"row":100,"column":25},"end":{"row":100,"column":26},"action":"insert","lines":["h"]}],[{"start":{"row":100,"column":24},"end":{"row":100,"column":26},"action":"remove","lines":["th"],"id":1057},{"start":{"row":100,"column":24},"end":{"row":100,"column":39},"action":"insert","lines":["threeLetterWord"]}],[{"start":{"row":100,"column":39},"end":{"row":100,"column":40},"action":"insert","lines":[" "],"id":1058},{"start":{"row":100,"column":40},"end":{"row":100,"column":41},"action":"insert","lines":["i"]},{"start":{"row":100,"column":41},"end":{"row":100,"column":42},"action":"insert","lines":["n"]}],[{"start":{"row":100,"column":42},"end":{"row":100,"column":43},"action":"insert","lines":[" "],"id":1059},{"start":{"row":100,"column":43},"end":{"row":100,"column":44},"action":"insert","lines":["f"]},{"start":{"row":100,"column":44},"end":{"row":100,"column":45},"action":"insert","lines":["o"]},{"start":{"row":100,"column":45},"end":{"row":100,"column":46},"action":"insert","lines":["u"]}],[{"start":{"row":100,"column":43},"end":{"row":100,"column":46},"action":"remove","lines":["fou"],"id":1060},{"start":{"row":100,"column":43},"end":{"row":100,"column":53},"action":"insert","lines":["foundWords"]}],[{"start":{"row":100,"column":54},"end":{"row":101,"column":0},"action":"insert","lines":["",""],"id":1061},{"start":{"row":101,"column":0},"end":{"row":101,"column":8},"action":"insert","lines":["        "]},{"start":{"row":101,"column":8},"end":{"row":101,"column":9},"action":"insert","lines":["s"]},{"start":{"row":101,"column":9},"end":{"row":101,"column":10},"action":"insert","lines":["e"]},{"start":{"row":101,"column":10},"end":{"row":101,"column":11},"action":"insert","lines":["l"]},{"start":{"row":101,"column":11},"end":{"row":101,"column":12},"action":"insert","lines":["f"]}],[{"start":{"row":101,"column":12},"end":{"row":101,"column":13},"action":"insert","lines":["."],"id":1062},{"start":{"row":101,"column":13},"end":{"row":101,"column":14},"action":"insert","lines":["a"]},{"start":{"row":101,"column":14},"end":{"row":101,"column":15},"action":"insert","lines":["s"]},{"start":{"row":101,"column":15},"end":{"row":101,"column":16},"action":"insert","lines":["s"]},{"start":{"row":101,"column":16},"end":{"row":101,"column":17},"action":"insert","lines":["e"]},{"start":{"row":101,"column":17},"end":{"row":101,"column":18},"action":"insert","lines":["r"]},{"start":{"row":101,"column":18},"end":{"row":101,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":101,"column":19},"end":{"row":101,"column":20},"action":"insert","lines":["T"],"id":1063},{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"insert","lines":["]"]}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"remove","lines":["]"],"id":1064}],[{"start":{"row":101,"column":20},"end":{"row":101,"column":21},"action":"insert","lines":["r"],"id":1065}],[{"start":{"row":101,"column":13},"end":{"row":101,"column":21},"action":"remove","lines":["assertTr"],"id":1066},{"start":{"row":101,"column":13},"end":{"row":101,"column":25},"action":"insert","lines":["assertTrue()"]}],[{"start":{"row":101,"column":24},"end":{"row":101,"column":25},"action":"insert","lines":["n"],"id":1067},{"start":{"row":101,"column":25},"end":{"row":101,"column":26},"action":"insert","lines":["o"]},{"start":{"row":101,"column":26},"end":{"row":101,"column":27},"action":"insert","lines":["t"]}],[{"start":{"row":101,"column":24},"end":{"row":101,"column":27},"action":"remove","lines":["not"],"id":1068},{"start":{"row":101,"column":24},"end":{"row":101,"column":27},"action":"insert","lines":["not"]}],[{"start":{"row":101,"column":26},"end":{"row":101,"column":27},"action":"remove","lines":["t"],"id":1069},{"start":{"row":101,"column":25},"end":{"row":101,"column":26},"action":"remove","lines":["o"]},{"start":{"row":101,"column":24},"end":{"row":101,"column":25},"action":"remove","lines":["n"]}],[{"start":{"row":101,"column":24},"end":{"row":101,"column":25},"action":"insert","lines":["n"],"id":1070},{"start":{"row":101,"column":25},"end":{"row":101,"column":26},"action":"insert","lines":["o"]},{"start":{"row":101,"column":26},"end":{"row":101,"column":27},"action":"insert","lines":["t"]},{"start":{"row":101,"column":27},"end":{"row":101,"column":28},"action":"insert","lines":["T"]}],[{"start":{"row":101,"column":24},"end":{"row":101,"column":28},"action":"remove","lines":["notT"],"id":1071},{"start":{"row":101,"column":24},"end":{"row":101,"column":36},"action":"insert","lines":["notThereWord"]}],[{"start":{"row":101,"column":36},"end":{"row":101,"column":37},"action":"insert","lines":[" "],"id":1072},{"start":{"row":101,"column":37},"end":{"row":101,"column":38},"action":"insert","lines":["i"]},{"start":{"row":101,"column":38},"end":{"row":101,"column":39},"action":"insert","lines":["n"]}],[{"start":{"row":101,"column":39},"end":{"row":101,"column":40},"action":"insert","lines":[" "],"id":1073},{"start":{"row":101,"column":40},"end":{"row":101,"column":41},"action":"insert","lines":["f"]},{"start":{"row":101,"column":41},"end":{"row":101,"column":42},"action":"insert","lines":["o"]},{"start":{"row":101,"column":42},"end":{"row":101,"column":43},"action":"insert","lines":["u"]},{"start":{"row":101,"column":43},"end":{"row":101,"column":44},"action":"insert","lines":["n"]},{"start":{"row":101,"column":44},"end":{"row":101,"column":45},"action":"insert","lines":["d"]}],[{"start":{"row":101,"column":40},"end":{"row":101,"column":45},"action":"remove","lines":["found"],"id":1074},{"start":{"row":101,"column":40},"end":{"row":101,"column":50},"action":"insert","lines":["foundWords"]}],[{"start":{"row":101,"column":50},"end":{"row":101,"column":51},"action":"insert","lines":["1"],"id":1075}],[{"start":{"row":101,"column":50},"end":{"row":101,"column":51},"action":"remove","lines":["1"],"id":1076}],[{"start":{"row":101,"column":51},"end":{"row":101,"column":52},"action":"insert","lines":["S"],"id":1077}],[{"start":{"row":101,"column":51},"end":{"row":101,"column":52},"action":"remove","lines":["S"],"id":1078}],[{"start":{"row":101,"column":51},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":1079},{"start":{"row":102,"column":0},"end":{"row":102,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":102,"column":4},"end":{"row":102,"column":8},"action":"remove","lines":["    "],"id":1080},{"start":{"row":102,"column":0},"end":{"row":102,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":102,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["",""],"id":1081}],[{"start":{"row":103,"column":0},"end":{"row":109,"column":46},"action":"insert","lines":["    def test_load_dictionary(self):","        \"\"\"","        Test that the `get_dictionary` function returns a dictionary","        that has a length greater than 0","        \"\"\"","        dictionary = boggle.get_dictionary('words.txt')","        self.assertGreater(len(dictionary), 0)"],"id":1082}],[{"start":{"row":0,"column":0},"end":{"row":109,"column":46},"action":"remove","lines":["import unittest","import boggle","from string import ascii_uppercase","","","class testBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for Boggle Solver.","    \"\"\"","    ","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        ","        grid = boggle.make_grid(0,0)","        self.assertEqual(len(grid),0)","            ","    def test_grid_size_is_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height.","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","        ","        ","    def test_grid_coordinates(self):","        \"\"\"","        Test to ensure all of the coordinates inside","        the grid can be accessed","        \"\"\"","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)","        ","    def test_grid_is_filled_with_letters(self):","        \"\"\"","        Ensure that each of the coordinates in the grid","        contains letters.","        \"\"\"","        grid = boggle.make_grid(2, 3)","        for letter in grid.values():","            self.assertIn(letter, ascii_uppercase)","        ","        ","    def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\"","        coords = (1 ,2)","        neighbours = boggle.neighbours_of_position(coords)","        self.assertIn((0, 1), neighbours)","        self.assertIn((0, 2), neighbours)","        self.assertIn((0, 3), neighbours)","        self.assertIn((1, 1), neighbours)","        self.assertIn((1, 3), neighbours)","        self.assertIn((2, 1), neighbours)","        self.assertIn((2, 2), neighbours)","        self.assertIn((2, 3), neighbours)","        ","    def test_all_grid_neighbours(self):","        \"\"\"","        Ensure that all of the grid positions have neighbours","        \"\"\"","        grid = boggle.make_grid(2, 2)","        neighbours = boggle.all_grid_neighbours(grid)","        self.assertEqual(len(neighbours), len(grid))","        for pos in grid:","            others = list(grid) # create a new list from the dictionary's keys","            others.remove(pos)","            self.assertListEqual(sorted(neighbours[pos]), sorted(others))","            ","            ","    def test_converting_a_path_to_words(self):","        \"\"\"","        Ensure that paths can be converted to words.","        \"\"\"","        grid = boggle.make_grid(2, 2)","        oneLetterWord = boggle.path_to_word(grid, [(0, 0)])","        twoLetterWord = boggle.path_to_word(grid, [(0, 0), (1, 1)])","        self.assertEqual(oneLetterWord, grid[(0, 0)])","        self.assertEquals(twoLetterWord, grid[(0, 0)] + grid[(1, 1)])","        ","    def test_search_grid_for_words(self):","        \"\"\"","        Ensure that certain patterns can be found in a path_to_word.","        \"\"\"","        grid = {(0, 0): 'A', (0, 1): 'B', (1, 0): 'C', (1, 1): 'D'}","        twoLetterWord = 'AB'","        threeLetterWord = 'ABC'","        notThereWord = 'EEE'","        dictionary = [twoLetterWord, threeLetterWord, notThereWord]","        ","        foundWords = boggle.search(grid, dictionary)","        ","        self.assertTrue(twoLetterWord in foundWords)","        self.assertTrue(threeLetterWord in foundWords)","        self.assertTrue(notThereWord in foundWords)","","    def test_load_dictionary(self):","        \"\"\"","        Test that the `get_dictionary` function returns a dictionary","        that has a length greater than 0","        \"\"\"","        dictionary = boggle.get_dictionary('words.txt')","        self.assertGreater(len(dictionary), 0)"],"id":1083},{"start":{"row":0,"column":0},"end":{"row":102,"column":46},"action":"insert","lines":["import unittest","import boggle","from string import ascii_uppercase","","","class TestBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for boggle solver","    \"\"\"","","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0, 0)","        self.assertEqual(len(grid), 0)","    ","    def test_grid_size_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","    ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)","    ","    def test_grid_is_filled_with_letters(self):","        \"\"\"","        Ensure that each of the coordinates in the grid","        contains letters","        \"\"\"","        grid = boggle.make_grid(2, 3)","        for letter in grid.values():","            self.assertIn(letter, ascii_uppercase)","    ","    def test_neighbours_of_a_position(self):","        \"\"\"","        Ensure that a position has 8 neighbours","        \"\"\"","        coords = (1, 2)","        neighbours = boggle.neighbours_of_position(coords)","        self.assertIn((0, 1), neighbours)","        self.assertIn((0, 2), neighbours)","        self.assertIn((0, 3), neighbours)","        self.assertIn((1, 1), neighbours)","        self.assertIn((1, 3), neighbours)","        self.assertIn((2, 1), neighbours)","        self.assertIn((2, 2), neighbours)","        self.assertIn((2, 3), neighbours)","    ","","    def test_all_grid_neighbours(self):","        \"\"\"","        Ensure that all of the grid positions have neighbours","        \"\"\"","        grid = boggle.make_grid(2, 2)","        neighbours = boggle.all_grid_neighbours(grid)","        self.assertEqual(len(neighbours), len(grid))","        for pos in grid:","            others = list(grid) # create a new list from the dictionary's keys","            others.remove(pos)","            self.assertListEqual(sorted(neighbours[pos]), sorted(others))","    ","    def test_converting_a_path_to_a_word(self):","        \"\"\"","        Ensure that paths can be converted to words","        \"\"\"","        grid = boggle.make_grid(2, 2)","        oneLetterWord = boggle.path_to_word(grid, [(0, 0)])","        twoLetterWord = boggle.path_to_word(grid, [(0, 0), (1, 1)])","        self.assertEqual(oneLetterWord, grid[(0, 0)])","        self.assertEqual(twoLetterWord, grid[(0, 0)] + grid[(1, 1)])","    ","    def test_search_grid_for_words(self):","        \"\"\"","        Ensure that certain patterns can be found in a `path_to_word`","        \"\"\"","        grid = {(0, 0): 'A', (0, 1): 'B', (1, 0): 'C', (1, 1): 'D'}","        twoLetterWord = 'AB'","        threeLetterWord = 'ABC'","        notThereWord = 'EEE'","        dictionary = [twoLetterWord, threeLetterWord, notThereWord]","","        foundWords = boggle.search(grid, dictionary)","","        self.assertTrue(twoLetterWord in foundWords)","        self.assertTrue(threeLetterWord in foundWords)","        self.assertTrue(notThereWord not in foundWords)","    ","    def test_load_dictionary(self):","        \"\"\"","        Test that the `get_dictionary` function returns a dictionary","        that has a length greater than 0","        \"\"\"","        dictionary = boggle.get_dictionary('words.txt')","        self.assertGreater(len(dictionary), 0)"]}]]},"ace":{"folds":[],"scrolltop":1867.8203125,"scrollleft":0,"selection":{"start":{"row":102,"column":46},"end":{"row":102,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":87,"state":"start","mode":"ace/mode/python"}},"timestamp":1563358283988,"hash":"eef62cbe609635f79c7915bff78ea788c619febe"}